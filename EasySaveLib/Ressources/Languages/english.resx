<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="home_showMenu_errorEnterValidOption" xml:space="preserve">
    <value>Please enter a valid option.</value>
  </data>
  <data name="home_showMenu_jc" xml:space="preserve">
    <value>'jc' =&gt; To create a new Job.</value>
  </data>
  <data name="home_showMenu_je" xml:space="preserve">
    <value>'je' =&gt; To execute a Job.</value>
  </data>
  <data name="home_showMenu_jr" xml:space="preserve">
    <value>'jr' =&gt; To remove a job</value>
  </data>
  <data name="home_showMenu_ju" xml:space="preserve">
    <value>'ju' =&gt; To update a job</value>
  </data>
  <data name="home_showMenu_jv" xml:space="preserve">
    <value>'jv' =&gt; To see all Job.</value>
  </data>
  <data name="home_showMenu_quitProgram" xml:space="preserve">
    <value>Press 'q' to leave the program.</value>
  </data>
  <data name="home_showMenu_s" xml:space="preserve">
    <value>'s' =&gt; Menu settings</value>
  </data>
  <data name="home_showMenu_selectOption" xml:space="preserve">
    <value>Please select the option you want using the menu below : </value>
  </data>
  <data name="home_showMenu_welcome" xml:space="preserve">
    <value>Welcome on EasySave !</value>
  </data>
  <data name="jobCreate_newJob_enterDestPath" xml:space="preserve">
    <value>Please enter a destination path for the new Job : </value>
  </data>
  <data name="jobCreate_newJob_enterDifferentialOrFull" xml:space="preserve">
    <value>Please choose if the job should be saved in differential or in full (Enter 'd' or 'f') : </value>
  </data>
  <data name="jobCreate_newJob_enterName" xml:space="preserve">
    <value>Please enter a name for the new Job : </value>
  </data>
  <data name="jobCreate_newJob_enterSourcePath" xml:space="preserve">
    <value>Please enter a source path for the new Job : </value>
  </data>
  <data name="jobCreate_newJob_errorEnterDifferentialOrFull" xml:space="preserve">
    <value>This is not a valid option.</value>
  </data>
  <data name="jobCreate_newJob_errorEnterValidDestPath" xml:space="preserve">
    <value>The destination path is not valid.</value>
  </data>
  <data name="jobCreate_newJob_errorEnterValidName" xml:space="preserve">
    <value>Please enter a name that is not null or empty.</value>
  </data>
  <data name="jobCreate_newJob_errorEnterValidSourcePath" xml:space="preserve">
    <value>The source path is not valid.</value>
  </data>
  <data name="jobCreate_newJob_exitMenu" xml:space="preserve">
    <value>Enter 'q' to exit the job creation interface.</value>
  </data>
  <data name="jobCreate_newJob_menuJobCreation" xml:space="preserve">
    <value>You have enterred the Job creation portal.</value>
  </data>
  <data name="jobCreate_show_enterringJobCreation" xml:space="preserve">
    <value>You have enterred the Job creation portal.</value>
  </data>
  <data name="jobRemove_chooseJob_errorChoice" xml:space="preserve">
    <value>Please enter a number within the limit of the job list</value>
  </data>
  <data name="jobRemove_chooseJob_WichJob" xml:space="preserve">
    <value>What job do you want to remove ?</value>
  </data>
  <data name="jobRemove_endMessage_success" xml:space="preserve">
    <value>The job has been deleted !</value>
  </data>
  <data name="jobRemove_showJobs_id" xml:space="preserve">
    <value>Job number :</value>
  </data>
  <data name="jobRun_chooseJob_dest" xml:space="preserve">
    <value>Job's destination path : </value>
  </data>
  <data name="jobRun_chooseJob_errorEnterValidId" xml:space="preserve">
    <value>This is not a valid Job id.</value>
  </data>
  <data name="jobRun_chooseJob_id" xml:space="preserve">
    <value>ID of job : </value>
  </data>
  <data name="jobRun_chooseJob_name" xml:space="preserve">
    <value>Job's name : </value>
  </data>
  <data name="jobRun_chooseJob_requestId" xml:space="preserve">
    <value>Please enter the id of the job you want : </value>
  </data>
  <data name="jobRun_chooseJob_source" xml:space="preserve">
    <value>Job's source path : </value>
  </data>
  <data name="jobRun_chooseJob_type" xml:space="preserve">
    <value>Job's type : </value>
  </data>
  <data name="jobRun_chooseJob_typeDiff" xml:space="preserve">
    <value>Differential</value>
  </data>
  <data name="jobRun_chooseJob_typeFull" xml:space="preserve">
    <value>Full</value>
  </data>
  <data name="jobRun_progress_jobProgress" xml:space="preserve">
    <value>Job in progress : </value>
  </data>
  <data name="jobRun_show_enterringJobRun" xml:space="preserve">
    <value>You have enterred the Job execution portal.</value>
  </data>
  <data name="jobRun_show_errorEnterValidOption" xml:space="preserve">
    <value>This is not a valid option (enter 's', 'o' or 'q')</value>
  </data>
  <data name="jobRun_show_exitMenu" xml:space="preserve">
    <value>Enter 'q' to quit the Job execution interface.</value>
  </data>
  <data name="jobRun_show_requestOption" xml:space="preserve">
    <value>Please enter your option : </value>
  </data>
  <data name="jobRun_show_selectOption" xml:space="preserve">
    <value>Do you want to run all jobs sequentially ('s') or just one job ('o') ?</value>
  </data>
  <data name="jobUpdate_AskUpdate_WichJob" xml:space="preserve">
    <value>What job do you want to change ?</value>
  </data>
  <data name="JobUpdate_ErrorMessage_Choice" xml:space="preserve">
    <value>Please enter a number within the limit of the job list</value>
  </data>
  <data name="jobUpdate_exit_exitMenu" xml:space="preserve">
    <value>Press 'Enter' to get back to the main menu</value>
  </data>
  <data name="jobUpdate_ShowAll_EnterMessage" xml:space="preserve">
    <value>You have enterred the Job update interface</value>
  </data>
  <data name="jobUpdate_ShowAll_ListOfJobs" xml:space="preserve">
    <value>List of jobs : </value>
  </data>
  <data name="jobUpdate_showJob_destPath" xml:space="preserve">
    <value>Job destination path = </value>
  </data>
  <data name="jobUpdate_showJob_nameJob" xml:space="preserve">
    <value>Job name = </value>
  </data>
  <data name="jobUpdate_showJob_sourcePath" xml:space="preserve">
    <value>Job source path = </value>
  </data>
  <data name="jobView_exit_exitMenu" xml:space="preserve">
    <value>Press 'Enter' to exit the view menu.</value>
  </data>
  <data name="jobView_showAll_enterringJobView" xml:space="preserve">
    <value>You have enterred the Job view portal.</value>
  </data>
  <data name="jobView_showAll_listJob" xml:space="preserve">
    <value>List of job : </value>
  </data>
  <data name="jobView_show_destPath" xml:space="preserve">
    <value>The Job's destionation path is : </value>
  </data>
  <data name="jobView_show_nameJob" xml:space="preserve">
    <value>The Job's name is : </value>
  </data>
  <data name="jobView_show_sourcePath" xml:space="preserve">
    <value>The Job's source path is : </value>
  </data>
  <data name="settings_showMenu_choiceLanguage" xml:space="preserve">
    <value>Choose a langage : 1. French, 2. English</value>
  </data>
  <data name="settings_showMenu_welcomeMessage" xml:space="preserve">
    <value>You have enterred the Settings interface</value>
  </data>
</root>